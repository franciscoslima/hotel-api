services:
  postgres:
    image: postgres:15
    container_name: hotel-postgres
    environment:
      POSTGRES_DB: hotel
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hotel-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d hotel"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: .
    container_name: hotel-api
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/hotel
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: 123
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - hotel-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  hotel-network:
    driver: bridge
